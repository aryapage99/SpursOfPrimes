# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UXuYJkYOwIUhCZcoLSmiLWQENToZI3qC
"""

def count_divisors(n):
    """
    Counts the number of even and odd proper divisors of a number
    """
    count_even, count_odd = 0, 0
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            count_even += i % 2 == 0
            count_odd += i % 2 != 0
            if i * i != n:
                count_even += (n // i) % 2 == 0
                count_odd += (n // i) % 2 != 0
    # Handle perfect squares
    if int(n**0.5) * int(n**0.5) == n:
        count_even -= 1
    return count_even, count_odd

def generate_divisor_counts(max_n):
    """
    Generates separate lists for numbers with/without even divisors up to a maximum number,
    sorted in descending order of divisors. Includes bigger ratio of even to odd divisors
    """
    no_even_divisors, with_even_divisors = [], []
    for i in range(1, max_n + 1):
        even, odd = count_divisors(i)
        if even == 0:
            no_even_divisors.append(i)
        else:
            ratio = even / odd if odd != 0 else float('inf')  # Handle divide-by-zero
            with_even_divisors.append((i, even, odd, ratio))

    # Sort lists in descending order
    no_even_divisors.sort(reverse=True)
    with_even_divisors.sort(key=lambda x: x[3], reverse=True)  # Sort by ratio

    return no_even_divisors, with_even_divisors


max_num = 2000
no_even, with_even = generate_divisor_counts(max_num)

print("Numbers with no even divisors:")
print(no_even)

print("\nNumbers with even and odd divisors:")
for num, even_count, odd_count, ratio in with_even:  # Include 'ratio' here
    print(f"{num}: Even: {even_count}, Odd: {odd_count}, Ratio: {ratio:.2f}")